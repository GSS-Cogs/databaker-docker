name: build push release image

on:
  release:
    types: [created, edited, published]

jobs:
  master:
    runs-on: ubuntu-latest
    steps:

      # Checkout the repo, fetch-depth:0 to include tags
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Logout latest tag
        run: echo ${{ steps.previoustag.outputs.tag }} 

      # Get the last commit of the repo and the commit of the latest tagged release
      - name: Set commit id variables
        id: vars
        run: |
          echo "::set-output name=latest_commit::$(git rev-parse HEAD)"
          echo "::set-output name=release_tagged_commit::$(git rev-list -n 1 ${{ steps.previoustag.outputs.tag }})"
      
      # If they don't match cancel/fail the build
      - uses: therussiankid92/gat@v1
        with:  
          assertion: should.equal  
          expected: ${{ steps.vars.outputs.latest_commit }}  
          actual: ${{ steps.vars.outputs.release_tagged_commit }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build latest and tagged release
        uses: docker/build-push-action@v2
        id: docker_build_master
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            gsscogs/databaker:${{ steps.previoustag.outputs.tag }}
            gsscogs/databaker:latest
      - name: Master Image digest
        run: echo ${{ steps.docker_build_master.outputs.digest }}
